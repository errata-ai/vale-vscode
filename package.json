{
	"name": "vale-server",
	"displayName": "Vale",
	"icon": ".vscode/icon.png",
	"description": "The official Visual Studio Code extension for Vale.",
	"bugs": "https://github.com/errata-ai/vale-vscode/issues",
	"author": {
		"name": "Joseph Kato",
		"email": "support@errata.ai",
		"url": "https://github.com/errata-ai"
	},
	"publisher": "errata-ai",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/errata-ai/vale-vscode.git"
	},
	"version": "0.15.2",
	"engines": {
		"vscode": "^1.69.0"
	},
	"categories": [
		"Linters"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Vale",
			"properties": {
				"vale.valeCLI.config": {
					"scope": "resource",
					"type": "string",
					"default": null,
					"description": "Absolute path to a Vale config file. If not specified, the default search process will be used (relative to the current file)."
				},
				"vale.valeCLI.path": {
					"scope": "resource",
					"type": "string",
					"default": null,
					"markdownDescription": "Absolute path to the Vale binary. The predefined [`${workspaceFolder}`](https://code.visualstudio.com/docs/editor/variables-reference#_predefined-variables) variable can be used to reference a non-global binary. (**NOTE**: On Windows you can use '/' and can omit `.cmd` in the path value.)"
				},
				"vale.minAlertLevel": {
					"scope": "resource",
					"type": "string",
					"default": "inherited",
					"enum": [
						"inherited",
						"suggestion",
						"warning",
						"error"
					],
					"markdownEnumDescriptions": [
						"Inherits the `minAlertLevel` from the active configuration file.",
						"Sets `minAlertLevel` to `suggestion`, overriding any configuration files.",
						"Sets `minAlertLevel` to `warning`, overriding any configuration files.",
						"Sets `minAlertLevel` to `error`, overriding any configuration files."
					],
					"markdownDescription": "Defines from which level of errors and above to display in the problems output."
				},
				"vale.valeCLI.usage": {
					"scope": "resource",
					"type": "string",
					"default": "Use Vale CLI specified in vale.valeCLI.path setting",
					"enum": [
						"Use embedded Vale CLI",
						"Use Vale CLI specified in vale.valeCLI.path setting",
						"Use Vale CLI available from system path"
					],
					"enumDescriptions": [
						"Use embedded Vale CLI. It is available for Linux, Mac and Windows; all in x64 architectures.",
						"Use Vale CLI specified in vale.valeCLI.path setting in priority, if not available fall back to embedded",
						"Use Vale CLI available from system path, if not available fall back to embedded"
					],
					"description": "Define which Vale CLI to use. Check the description of each field to have more details in priority order and fallbacks. See Output -> Vale to see if a fallback has been used."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "yarn run compile",
		"test": "node ./out/test/runTest.js",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"test-compile": "tsc -p ./"
	},
	"devDependencies": {
		"@types/chai": "^4.3.3",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.0.0",
		"@types/vscode": "^1.69.0",
		"@types/which": "^2.0.1",
		"@vscode/test-electron": "^2.1.5",
		"async-wait-until": "^2.0.12",
		"chai": "^4.3.6",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"ts-loader": "^9.3.1",
		"tslint": "^6.1.3",
		"typescript": "^4.7.4",
		"vscode-test": "^1.6.1",
		"webpack": "^5.73.0",
		"webpack-cli": "^4.10.0"
	},
	"dependencies": {
		"fs": "0.0.1-security",
		"which": "^2.0.2"
	}
}
